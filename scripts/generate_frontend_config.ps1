param(
  [string]$ApiBase
)

# Generate frontend/static/js/config.js from environment or .env
$ErrorActionPreference = 'Stop'

function Get-RepoRoot {
  param([string]$ScriptsPath)
  return (Split-Path -Parent $ScriptsPath)
}

function Get-EnvValueFromDotenv {
  param(
    [string]$DotenvPath,
    [string]$Key
  )
  if (-not (Test-Path $DotenvPath)) { return $null }
  $line = Get-Content $DotenvPath | Where-Object { $_ -match "^\s*${Key}\s*=\s*(.+)$" } | Select-Object -First 1
  if (-not $line) { return $null }
  $m = [regex]::Match($line, "^\s*${Key}\s*=\s*(.+)$")
  if ($m.Success) {
    $val = $m.Groups[1].Value.Trim().Trim('"').Trim("'")
    return $val
  }
  return $null
}

$repoRoot = Get-RepoRoot -ScriptsPath $PSScriptRoot
$dotenvPath = Join-Path $repoRoot '.env'

# Resolution order for API base
# 1) -ApiBase parameter
# 2) FRONTEND_API_BASE env var
# 3) API_BASE env var
# 4) FRONTEND_API_BASE in .env
# 5) API_BASE in .env
# 6) default http://localhost:5000/api
$resolvedApiBase = $null
if ($ApiBase) { $resolvedApiBase = $ApiBase }
elseif ($env:FRONTEND_API_BASE) { $resolvedApiBase = $env:FRONTEND_API_BASE }
elseif ($env:API_BASE) { $resolvedApiBase = $env:API_BASE }
elseif (-not $resolvedApiBase) { $resolvedApiBase = Get-EnvValueFromDotenv -DotenvPath $dotenvPath -Key 'FRONTEND_API_BASE' }
if (-not $resolvedApiBase) { $resolvedApiBase = Get-EnvValueFromDotenv -DotenvPath $dotenvPath -Key 'API_BASE' }
if (-not $resolvedApiBase) { $resolvedApiBase = 'http://localhost:5000/api' }

$targetDir = Join-Path $repoRoot 'frontend\static\js'
$targetFile = Join-Path $targetDir 'config.js'

if (-not (Test-Path $targetDir)) {
  New-Item -ItemType Directory -Force -Path $targetDir | Out-Null
}

$configContent = @"// Auto-generated by scripts/generate_frontend_config.ps1
// Update via FRONTEND_API_BASE or API_BASE env vars or .env file.
window.__API_BASE__ = '$resolvedApiBase';
"@

Set-Content -Path $targetFile -Value $configContent -Encoding UTF8
Write-Host "Generated frontend config at: $targetFile" -ForegroundColor Green
Write-Host "API Base: $resolvedApiBase" -ForegroundColor Cyan
