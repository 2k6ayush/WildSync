version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: wildsync
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d wildsync"]
      interval: 5s
      timeout: 3s
      retries: 30

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:${POSTGRES_PASSWORD}@db:5432/wildsync
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      # Local LLM via Ollama (optional)
      OLLAMA_ENABLED: ${OLLAMA_ENABLED:-0}
      OLLAMA_HOST: ${OLLAMA_HOST:-ollama:11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-mistral}
      DB_AUTOCREATE: "1"
      DB_SEED: ${DB_SEED:-0}
      FLASK_ENV: production
      WAIT_FOR_HOST: db
      WAIT_FOR_PORT: "5432"
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    ports:
      - "8000:8000"

  ollama:
    image: ollama/ollama:latest
    # Expose only inside the compose network; no host port mapping needed
    volumes:
      - ollama:/root/.ollama
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:11434/api/tags >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

  frontend:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  pgdata:
  ollama:
